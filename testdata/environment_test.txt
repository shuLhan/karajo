Test LoadEnvironment.

<<< environment.json
{
  "jobs": {
    "Scheduler hourly 5m": {
      "path": "/scheduler-hourly-5m",
      "commands": [
        "echo Test job scheduler hourly per 5m"
      ],
      "last_run": "0001-01-01T00:00:00Z",
      "next_run": "0001-01-01T00:00:00Z",
      "id": "",
      "name": "",
      "schedule": "hourly@0,5,10,15,20,25,30,35,40,45,50,55"
    },
    "Scheduler minutely": {
      "path": "/scheduler-minutely",
      "commands": [
        "echo Test job scheduler per minute"
      ],
      "last_run": "0001-01-01T00:00:00Z",
      "next_run": "0001-01-01T00:00:00Z",
      "id": "",
      "name": "",
      "schedule": "minutely"
    },
    "Test auth_kind github": {
      "path": "/github",
      "auth_kind": "github",
      "commands": [
        "echo auth_kind is github"
      ],
      "last_run": "0001-01-01T00:00:00Z",
      "next_run": "0001-01-01T00:00:00Z",
      "id": "",
      "name": ""
    },
    "Test interval 1m": {
      "commands": [
        "echo Test job interval 1m",
        "echo Counter is $KARAJO_JOB_COUNTER"
      ],
      "last_run": "0001-01-01T00:00:00Z",
      "next_run": "0001-01-01T00:00:00Z",
      "id": "",
      "name": "",
      "interval": 60000000000
    },
    "Test long running": {
      "path": "/test-long-running",
      "commands": [
        "for ((x=0; x\u003c90; x++)); do echo \"$x\"; sleep 1; done"
      ],
      "last_run": "0001-01-01T00:00:00Z",
      "next_run": "0001-01-01T00:00:00Z",
      "id": "",
      "name": "",
      "description": "The job to test log refresh."
    },
    "Test manual run": {
      "path": "/test-manual-run",
      "commands": [
        "echo Test job manual run",
        "echo Counter is $KARAJO_JOB_COUNTER"
      ],
      "last_run": "0001-01-01T00:00:00Z",
      "next_run": "0001-01-01T00:00:00Z",
      "id": "",
      "name": "",
      "description": "The job to test manual run."
    },
    "notif-email-success": {
      "path": "/notif-email-success",
      "commands": [
        "echo Test email notification"
      ],
      "last_run": "0001-01-01T00:00:00Z",
      "next_run": "0001-01-01T00:00:00Z",
      "id": "",
      "name": "",
      "description": "Send notification when job success.",
      "notif_on_success": [
        "email-to-shulhan",
        "email-to-ops"
      ],
      "notif_on_failed": [
        "email-to-shulhan"
      ]
    },
    "test fail": {
      "path": "/test-fail",
      "auth_kind": "hmac-sha256",
      "commands": [
        "echo Test job fail",
        "echo Counter is $KARAJO_JOB_COUNTER",
        "x=$(($RANDOM%10)) \u0026\u0026 echo sleep in ${x}s \u0026\u0026 sleep $x",
        "command-not-found"
      ],
      "last_run": "0001-01-01T00:00:00Z",
      "next_run": "0001-01-01T00:00:00Z",
      "id": "",
      "name": ""
    },
    "test random": {
      "path": "/test-random",
      "commands": [
        "echo Test job random",
        "echo Counter is $KARAJO_JOB_COUNTER",
        "x=$(($RANDOM%10)) \u0026\u0026 echo sleep in ${x}s \u0026\u0026 sleep $x",
        "rand=$(($RANDOM%2)) \u0026\u0026 echo $rand \u0026\u0026 exit $rand"
      ],
      "last_run": "0001-01-01T00:00:00Z",
      "next_run": "0001-01-01T00:00:00Z",
      "id": "",
      "name": "",
      "description": "Test running command with random exit status"
    },
    "test success": {
      "path": "/test-success",
      "commands": [
        "echo Test job success",
        "echo Counter is $KARAJO_JOB_COUNTER",
        "x=$(($RANDOM%10)) \u0026\u0026 echo sleep in ${x}s \u0026\u0026 sleep $x"
      ],
      "last_run": "0001-01-01T00:00:00Z",
      "next_run": "0001-01-01T00:00:00Z",
      "id": "",
      "name": ""
    }
  },
  "http_jobs": {
    "Scheduler hourly 10m": {
      "http_method": "POST",
      "http_url": "/karajo/api/job/run/test-manual-run",
      "http_request_type": "json",
      "last_run": "0001-01-01T00:00:00Z",
      "next_run": "0001-01-01T00:00:00Z",
      "id": "",
      "name": "",
      "description": "Test triggering job using scheduler hourly per 10 minutes",
      "schedule": "hourly@0,10,20,30,40,50",
      "http_timeout": 0
    },
    "Test fail": {
      "http_method": "POST",
      "http_url": "http://127.0.0.1:31937/karajo/api/job/run/test-fail",
      "http_request_type": "json",
      "http_headers": [
        "A: B",
        "C: D"
      ],
      "last_run": "0001-01-01T00:00:00Z",
      "next_run": "0001-01-01T00:00:00Z",
      "id": "",
      "name": "",
      "description": "The job to test what the user interface and logs look likes if its \u003cb\u003efail\u003c/b\u003e.",
      "interval": 20000000000,
      "http_timeout": 0
    },
    "Test long running": {
      "http_method": "POST",
      "http_url": "/karajo/api/job/run/test-long-running",
      "http_request_type": "json",
      "last_run": "0001-01-01T00:00:00Z",
      "next_run": "0001-01-01T00:00:00Z",
      "id": "",
      "name": "",
      "description": "The job to test job log refresh.",
      "interval": 120000000000,
      "http_timeout": 0
    },
    "Test random": {
      "http_method": "POST",
      "http_url": "/karajo/api/job/run/test-random",
      "http_request_type": "json",
      "last_run": "0001-01-01T00:00:00Z",
      "next_run": "0001-01-01T00:00:00Z",
      "id": "",
      "name": "",
      "description": "Test triggering job /test-random",
      "http_timeout": 0
    },
    "Test success": {
      "http_method": "POST",
      "http_url": "/karajo/api/job/run/test-success",
      "http_request_type": "json",
      "http_headers": [
        "X: Y"
      ],
      "last_run": "0001-01-01T00:00:00Z",
      "next_run": "0001-01-01T00:00:00Z",
      "id": "",
      "name": "",
      "description": "The job to test what the user interface and logs look likes if its \u003ci\u003esuccess\u003c/i\u003e.",
      "interval": 20000000000,
      "http_timeout": 0
    }
  },
  "name": "My karajo",
  "listen_address": "127.0.0.1:31937",
  "dir_base": "testdata",
  "dir_public": "testdata",
  "http_timeout": 300000000000,
  "max_job_running": 2,
  "is_development": false
}
